name: sni-proxy
services:
  dnsproxy:
    image: dnsproxy:v1
    container_name: dnsproxy
    build:
      context: .
      dockerfile: dnsproxy.Dockerfile
    environment:
      - SOCKS_IP=${WIREPROXY_CONTAINER_IP}
      - SOCKS_PORT=${SOCKS_SERVICE_PORT}
    volumes:
      - $PWD/dnsproxy-config.yaml:/service/config.yaml
    networks:
      sninet:
        ipv4_address: ${DNS_PROXY_CONTAINER_IP}
    depends_on:
      - wireproxy
    restart: always
  sni:
    image: sni-proxy:v1
    build:
      context: .
      dockerfile: sni.Dockerfile
    container_name: sni
    environment:
      # IP of the SNI service (Docker host's IP address)
      - SNI_HOST_IP=${SNI_HOST_IP}
      # IP of the dnsproxy
      - DNS_PROXY_IP=${DNS_PROXY_CONTAINER_IP}
      # IP and port of the SOCKS5 Proxy server (WIREPROXY Client)
      - SOCKS_IP=${WIREPROXY_CONTAINER_IP}
      - SOCKS_PORT=${SOCKS_SERVICE_PORT}
    volumes:
      - $PWD/dnsmasq.conf:/etc/dnsmasq.sample
      - $PWD/sniproxy.conf:/etc/sniproxy.sample
    ports:
      - "${SNI_HOST_IP}:530:53"
      - "${SNI_HOST_IP}:530:53/udp"
      - "${SNI_HOST_IP}:80:80"
      - "${SNI_HOST_IP}:443:443"
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    networks:
      sninet:
        ipv4_address: ${SNI_CONTAINER_IP}
    depends_on:
      - dnsproxy
    restart: unless-stopped

  wireproxy:
    image: ghcr.io/whyvl/wireproxy:9dad356beeb3abad48434d5ec9272ad17af5b957
    container_name: wireproxy
    volumes:
      - $PWD/wireproxy.conf:/etc/wireproxy/wireproxy.conf:ro
    dns: 1.1.1.1
    networks:
      sninet:
        ipv4_address: ${WIREPROXY_CONTAINER_IP}
    restart: unless-stopped
    command: ["-c", "/etc/wireproxy/wireproxy.conf"]

networks:
  sninet:
    external: true
